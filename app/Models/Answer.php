<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Answer extends Model
{
    use HasFactory;

    protected $fillable = [
      'body', 'user_id',
    ];

    public function getBodyHtmlAttribute(){
        return \Parsedown::instance()->text($this->body);
    }

    public function question(){
        return $this->belongsTo(Question::class);
    }

    public function user(){
        return $this->belongsTo(User::class);
    }

    public static function boot() //What runs whenever an operation is performed in the Answer model
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function ($answer){ //Increaments answers_count when create or save operation in initiated
            $answer->question->increment('answers_count');
//            $answer->question->save();
        });

        static::deleted(function($answer){ //Decreaments answers_count when delete operation in initiated
           $question = $answer->question;
           $question->decrement('answers_count');

           if($question->best_answer_id == $answer->id){
               $question->best_answer_id = NULL;
               $question->save();
           }

        });

    }

    public function getCreatedDateAttribute(){
        return $this->created_at->diffForHumans();
    }

    public function getStatusAttribute(){
        return $this->isBest() ? 'vote-accepted' : '';
    }

    public function getIsBestAttribute(){
       return $this->isBest();
    }

    public function isBest(){
        return $this->id == $this->question->best_answer_id;
    }

    public function votes(){
        /*
         * use the singular form of the table name as the aurgument,
         * laravel will detect the the votable_id and votable_type
         * dynamically
         */
        return $this->morphToMany(User::class, 'votable');
    }

}
